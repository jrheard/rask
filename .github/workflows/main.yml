name: Main

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: us-west-2
  ECR_REPOSITORY: rask_api
  ECS_SERVICE: rask_api_service
  ECS_CLUSTER: default
  ECS_TASK_DEFINITION: .aws/rask_api_task_definition.json
  CONTAINER_NAME: rask_api

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Start containers
        run: docker-compose -f "docker-compose-test.yaml" up -d

      - name: Run tests
        run: cargo test --verbose -- --test-threads=1
        env:
          RUST_BACKTRACE: 1

  push:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Public ECR
        uses: docker/login-action@v1
        with:
          registry: public.ecr.aws
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        env:
          AWS_REGION: us-east-1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: public.ecr.aws/q5h9o2a2/rask_api:latest

  # Below via https://docs.github.com/en/actions/guides/deploying-to-amazon-elastic-container-service
  deploy:
    needs: push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: public.ecr.aws/q5h9o2a2/rask_api:latest

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true